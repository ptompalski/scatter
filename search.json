[{"path":"https://ptompalski.github.io/scatter/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Piotr Tompalski. Author, maintainer.","code":""},{"path":"https://ptompalski.github.io/scatter/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Tompalski P (2024). scatter: Scatterplots descriptive statistics. R package version 0.1.2, https://ptompalski.github.io/scatter/.","code":"@Manual{,   title = {scatter: Scatterplots with descriptive statistics},   author = {Piotr Tompalski},   year = {2024},   note = {R package version 0.1.2},   url = {https://ptompalski.github.io/scatter/}, }"},{"path":"https://ptompalski.github.io/scatter/index.html","id":"scatter","dir":"","previous_headings":"","what":"Scatterplots with descriptive statistics","title":"Scatterplots with descriptive statistics","text":"package provides functions quickly calculating measures model prediction accuracy creating enhanced scatterplots. scatterplots can include text summarizing agreement metrics (e.g., R², bias, RMSE) two plotted variables, support grouped data faceting.","code":""},{"path":"https://ptompalski.github.io/scatter/index.html","id":"why","dir":"","previous_headings":"","what":"Why?","title":"Scatterplots with descriptive statistics","text":"Scatterplots one frequently used visualizations daily work. creating scatterplot straightforward, wanted version meet specific needs: Ensure plot always square. Include 1:1 reference line. Display “predicted” values x-axis. Provide optional text panel showing agreement statistics. Seamlessly handle grouped data, creating faceted plots minimal effort.","code":""},{"path":"https://ptompalski.github.io/scatter/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Scatterplots with descriptive statistics","text":"","code":"devtools::install_github(\"ptompalski/scatter\") library(scatter)"},{"path":"https://ptompalski.github.io/scatter/index.html","id":"features","dir":"","previous_headings":"","what":"Features","title":"Scatterplots with descriptive statistics","text":"Calculate Model Prediction Accuracy: Use agreement_metrics() compute metrics like R2, bias RMSE. Generate Scatterplots: Use scatter() generate scatterplots optional agreement metrics text annotations, faceting grouped data.","code":""},{"path":"https://ptompalski.github.io/scatter/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"Scatterplots with descriptive statistics","text":"Simple scatterplot  Scatterplot agreement metrics  Grouped scatterplot agreement metrics","code":"library(dplyr) library(ggplot2) library(scatter)  # some fake data df <-  tibble(   observed = c(rnorm(150, 10, 2)),   predicted = observed + rnorm(150,0, 1),   group = rep(c(\"A\", \"B\", \"C\"), each = 50)           )  scatter(df, observed, predicted) scatter(df, observed, predicted, add_metrics = TRUE) df %>%   group_by(group) %>%   scatter(observed, predicted, add_metrics = TRUE)"},{"path":"https://ptompalski.github.io/scatter/reference/agreement_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Agreement Metrics for Predictions — agreement_metrics","title":"Compute Agreement Metrics for Predictions — agreement_metrics","text":"function calculates various metrics assess agreement predicted true values. leverages flexibility `yardstick` package compute variety metrics, can specified `metrics` parameter.","code":""},{"path":"https://ptompalski.github.io/scatter/reference/agreement_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Agreement Metrics for Predictions — agreement_metrics","text":"","code":"agreement_metrics(   data,   truth,   estimate,   metrics = list(yardstick::rsq, yardstick::msd, yardstick::rmse, yardstick::mape),   label = FALSE )"},{"path":"https://ptompalski.github.io/scatter/reference/agreement_metrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Agreement Metrics for Predictions — agreement_metrics","text":"data data frame containing observed (`truth`) predicted (`estimate`) values. truth column `data` representing true values. Use tidy evaluation (e.g., ``). estimate column `data` representing predicted values. Use tidy evaluation (e.g., ``). metrics list metrics compute. Metrics can almost function `yardstick` package (e.g., `rsq`, `rmse`, `mape`, `msd`), provided follow `yardstick` format. Defaults `list(rsq, msd, rmse, mape)`. label Logical. `TRUE`, function creates concatenated string summarizing computed metrics new column called `label`. Defaults `FALSE`.","code":""},{"path":"https://ptompalski.github.io/scatter/reference/agreement_metrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Agreement Metrics for Predictions — agreement_metrics","text":"data frame computed metrics. `label = TRUE`, output includes `label` column summarizing metrics.","code":""},{"path":"https://ptompalski.github.io/scatter/reference/agreement_metrics.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Agreement Metrics for Predictions — agreement_metrics","text":"function internally uses `metric_set` function `yardstick` handle specified metrics. results returned wide format, metric column. numeric metrics rounded two decimal places readability.","code":""},{"path":"https://ptompalski.github.io/scatter/reference/agreement_metrics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Agreement Metrics for Predictions — agreement_metrics","text":"","code":"library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union library(yardstick) library(tidyr) #> Error in library(tidyr): there is no package called ‘tidyr’  # Example dataset data <- data.frame(   truth = c(3, 5, 2.5, 7),   estimate = c(2.8, 5.1, 2.6, 7.2) )  # Compute default metrics agreement_metrics(data, truth = truth, estimate = estimate) #> Error in pivot_wider(., names_from = .metric, values_from = .estimate): could not find function \"pivot_wider\""},{"path":"https://ptompalski.github.io/scatter/reference/scatter.html","id":null,"dir":"Reference","previous_headings":"","what":"Scatterplot with Truth and Estimate Values — scatter","title":"Scatterplot with Truth and Estimate Values — scatter","text":"function creates scatterplot comparing `truth` `estimate` values. supports grouped data, adding facets group, can optionally include agreement metrics text annotations plot. Metrics can positioned either inside plot area outside subtitles facet labels.","code":""},{"path":"https://ptompalski.github.io/scatter/reference/scatter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scatterplot with Truth and Estimate Values — scatter","text":"","code":"scatter(   data,   truth,   estimate,   metrics = list(yardstick::rsq, yardstick::msd, yardstick::rmse, yardstick::mape),   metrics_position = \"inside\" )"},{"path":"https://ptompalski.github.io/scatter/reference/scatter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scatterplot with Truth and Estimate Values — scatter","text":"data data frame tibble. Can grouped (using `dplyr::group_by`) create faceted plots. truth column name `data` containing truth values. unquoted. estimate column name `data` containing estimate values. unquoted. metrics list metrics compute display. Metrics can include almost function `yardstick` package (e.g., `rsq`, `rmse`, `mape`). Defaults `list(rsq, msd, rmse, mape)`. Set `NULL` disable. metrics_position character string indicating display metrics. Options `\"inside\"` (annotations within plot) `\"outside\"` (subtitles facet labels). Defaults `\"inside\"`.","code":""},{"path":"https://ptompalski.github.io/scatter/reference/scatter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scatterplot with Truth and Estimate Values — scatter","text":"ggplot object.","code":""},{"path":"https://ptompalski.github.io/scatter/reference/scatter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Scatterplot with Truth and Estimate Values — scatter","text":"function dynamically calculates axis ranges based `truth` `estimate` values, ensuring square plot using `coord_fixed()`. grouped data, uses `facet_wrap` create separate scatterplots group. Agreement metrics calculated using `agreement_metrics` function, display depends value `metrics_position`. grouped data `metrics_position = \"outside\"`, metrics added facet labels, `metrics_position = \"inside\"`, displayed within plot annotations.","code":""},{"path":"https://ptompalski.github.io/scatter/reference/scatter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scatterplot with Truth and Estimate Values — scatter","text":"","code":"library(dplyr) library(ggplot2)  # Example data set.seed(123) df <- data.frame(   group = rep(c(\"A\", \"B\", \"C\"), each = 50),   truth = c(rnorm(50, 10, 2), rnorm(50, 20, 3), rnorm(50, 15, 4)),   estimate = c(rnorm(50, 10, 2), rnorm(50, 20, 3), rnorm(50, 15, 4)) )  # Simple scatterplot scatter(df, truth, estimate) #> Error in pivot_wider(., names_from = .metric, values_from = .estimate): could not find function \"pivot_wider\"  # Scatterplot with agreement metrics (inside plot) scatter(df, truth, estimate, metrics = list(rsq, mape), metrics_position = \"inside\") #> Error in pivot_wider(., names_from = .metric, values_from = .estimate): could not find function \"pivot_wider\"  # Scatterplot with agreement metrics (outside plot as subtitle) scatter(df, truth, estimate, metrics = list(rsq, rmse), metrics_position = \"outside\") #> Error in pivot_wider(., names_from = .metric, values_from = .estimate): could not find function \"pivot_wider\"  # Grouped scatterplot with agreement metrics inside df %>%   group_by(group) %>%   scatter(truth, estimate, metrics = list(rsq, mape), metrics_position = \"inside\") #> Error in pivot_wider(., names_from = .metric, values_from = .estimate): could not find function \"pivot_wider\"  # Grouped scatterplot with agreement metrics outside as facet labels df %>%   group_by(group) %>%   scatter(truth, estimate, metrics = list(rsq, rmse), metrics_position = \"outside\") #> Error in pivot_wider(., names_from = .metric, values_from = .estimate): could not find function \"pivot_wider\""},{"path":"https://ptompalski.github.io/scatter/reference/theme_baseR.html","id":null,"dir":"Reference","previous_headings":"","what":"Custom ggplot Theme — theme_baseR","title":"Custom ggplot Theme — theme_baseR","text":"minimalist custom ggplot theme configurable font size font family.","code":""},{"path":"https://ptompalski.github.io/scatter/reference/theme_baseR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Custom ggplot Theme — theme_baseR","text":"","code":"theme_baseR(font_size = 10, font_family = \"sans\")"},{"path":"https://ptompalski.github.io/scatter/reference/theme_baseR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Custom ggplot Theme — theme_baseR","text":"font_size Numeric. base font size text elements plot. Default 12. font_family Character. font family use text elements. Default \"sans\".","code":""},{"path":"https://ptompalski.github.io/scatter/reference/theme_baseR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Custom ggplot Theme — theme_baseR","text":"ggplot2 theme object.","code":""},{"path":"https://ptompalski.github.io/scatter/reference/theme_baseR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Custom ggplot Theme — theme_baseR","text":"","code":"library(ggplot2)  # Example plot with the default theme ggplot(mpg, aes(displ, hwy)) +   geom_point() +   theme_baseR()   # Custom font size and font family ggplot(mpg, aes(displ, hwy)) +   geom_point() +   theme_baseR(font_size = 14, font_family = \"serif\")"}]
